name: Build and Deploy Docker Image to Google Artifact Registry

on:
  push:
    branches: [ "main" ] # Triggers on push to 'main' branch
  workflow_dispatch: # Allows manual triggering from GitHub UI

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: ${{ secrets.REGION }}
  REPOSITORY: artha-adk-server
  IMAGE_NAME: artha-adk-server-${{ github.run_number }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        
      - name: Authorize Docker to push to Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
          
      - name: Build Docker image
        id: build
        run: |
          DOCKER_IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest"
          docker build -t $DOCKER_IMAGE .
          echo "docker_image=$DOCKER_IMAGE" >> $GITHUB_OUTPUT
          
      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ steps.build.outputs.docker_image }}

      - name: Prepare app.yaml from template
        run: |
          sed -e "s|{{SERVICE_ACCOUNT_EMAIL}}|${{ secrets.SERVICE_ACCOUNT_EMAIL }}|g" \
              app.yaml.tpl > app.yaml

      - name: Debug generated app.yaml
        run: |
          echo "Generated app.yaml content:"
          cat app.yaml
          echo "---"
          echo "Docker image: ${{ steps.build.outputs.docker_image }}"
          echo "Service account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}"
          
      - name: Validate app.yaml syntax
        run: |
          python3 -c "import yaml; yaml.safe_load(open('app.yaml'))" && echo "YAML syntax is valid" || echo "YAML syntax error detected"

      - name: Deploy to App Engine
        run: |
          gcloud app deploy ./app.yaml --project ${{ env.PROJECT_ID }} --image-url=${{ steps.build.outputs.docker_image }}
